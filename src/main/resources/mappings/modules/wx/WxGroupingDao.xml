<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitech.iLife.modules.wx.dao.WxGroupingDao">
    
	<sql id="wxGroupingColumns">
		a.id AS "id",
		a.code AS "code",
		a.oid AS "oid",
		a.name AS "name",
		a.event_date AS "eventDate",
		a.event_time_from AS "eventTimeFrom",
		a.event_time_to AS "eventTimeTo",
		a.subject_type AS "subjectType",
		a.subject_id AS "subjectId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="wxGroupingJoins">
	</sql>
    
	<select id="get" resultType="WxGrouping">
		SELECT 
			<include refid="wxGroupingColumns"/>
		FROM wx_grouping a
		<include refid="wxGroupingJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="WxGrouping">
		SELECT 
			<include refid="wxGroupingColumns"/>
		FROM wx_grouping a
		<include refid="wxGroupingJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="WxGrouping">
		SELECT 
			<include refid="wxGroupingColumns"/>
		FROM wx_grouping a
		<include refid="wxGroupingJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据groupingCode查询互阅结果。是一个List列表，每一项为一个Map -->
	<select id="findGroupingResultMap" resultType="java.util.HashMap">
		SELECT 
			a.title AS "title",
			b.nickname AS "nickname",
			b.points AS "points",
			(select count(id) from wx_reads rr where rr.article_id = a.id and rr.grouping=#{groupingCode}) AS "gotCounts",
			(select count(id) from wx_reads rr where rr.article_id = a.id and (rr.grouping is null || rr.grouping != #{groupingCode}) and rr.openid in (select distinct(bb.openid) from wx_grouping gg,wx_article aa, mod_broker bb where gg.code=#{groupingCode} and gg.subject_type='article' and aa.id=gg.subject_id and bb.id=aa.broker_id)) AS "gotCounts2",
			(select count(id) from wx_reads rr where rr.openid = b.openid and rr.grouping=#{groupingCode}) AS "paidCounts",
			(select count(id) from wx_reads rr where rr.openid = b.openid and (rr.grouping is null || rr.grouping != #{groupingCode}) and rr.article_id in (select subject_id from wx_grouping where code=#{groupingCode} and subject_type='article' )) AS "paidCounts2"
		FROM 
			wx_grouping g,wx_article a,mod_broker b
		where
		    g.subject_type='article'
		    and a.id=g.subject_id
		    and b.id=a.broker_id		
			AND g.code = #{groupingCode}
		ORDER BY a.update_date,b.points DESC
		limit #{size}
	</select>	
	
	<insert id="insert">
		INSERT INTO wx_grouping(
			id,
			code,
			oid,
			name,
			event_date,
			event_time_from,
			event_time_to,
			subject_type,
			subject_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{code},
			#{oid},
			#{name},
			#{eventDate},
			#{eventTimeFrom},
			#{eventTimeTo},
			#{subjectType},
			#{subjectId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE wx_grouping SET 	
			code = #{code},
			oid = #{oid},
			name = #{name},
			event_date = #{eventDate},
			event_time_from = #{eventTimeFrom},
			event_time_to = #{eventTimeTo},
			subject_type = #{subjectType},
			subject_id = #{subjectId},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE wx_grouping SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>