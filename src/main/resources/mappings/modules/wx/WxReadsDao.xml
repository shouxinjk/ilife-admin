<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitech.iLife.modules.wx.dao.WxReadsDao">
    
	<sql id="wxReadsColumns">
		a.id AS "id",
		a.article_id AS "article.id",
		aa.title AS "article.title",
		aa.url AS "article.url",
		a.broker_id AS "broker.id",
		bb.nickname AS "broker.nickname",
		a.openid AS "openid",
		a.read_count AS "readCount",
		a.grouping AS "grouping",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		uu.name AS "updateBy.name",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="wxReadsJoins">
		LEFT JOIN x_sys_user uu ON uu.id = a.update_by 
		LEFT JOIN mod_broker bb ON bb.id = a.broker_id	
		LEFT JOIN wx_article aa ON aa.id = a.article_id
	</sql>
	
	<!-- 获取报数明细：可根据阅读者、文章ID过滤。按照报数时间倒序排列 -->
	<select id="findReadingList" resultType="WxReads">
		SELECT 
			<include refid="wxReadsColumns"/>
		FROM wx_reads a
		<include refid="wxReadsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="articleId!=null and articleId != ''">
				AND a.article_id = #{articleId}
			</if>		
			<if test="readerBrokerId!=null and readerBrokerId != ''">
				AND a.broker_id = #{readerBrokerId}
			</if>
			<if test="grouping != null and grouping != ''">
				AND a.grouping = #{grouping}
			</if>			
			<if test="readerOpenid != null and readerOpenid != ''">
				AND a.openid = #{readerOpenid}
			</if>
		</where>
		ORDER BY a.update_date DESC
	</select>	
	
	<!-- 已废弃。直接通过ck获取。获取班车互阅报数明细：可根据班车号等过滤，按照文章ID、阅读时间升序排列 -->
	<select id="findGroupingList" resultType="WxReads">
		SELECT 
			<include refid="wxReadsColumns"/>
		FROM wx_reads a
		<include refid="wxReadsJoins"/>
		<where>
			a.del_flag = 0
			<if test="articleId!=null and articleId != ''">
				AND a.article_id = #{articleId}
			</if>		
			<if test="readerBrokerId!=null and readerBrokerId != ''">
				AND a.broker_id = #{readerBrokerId}
			</if>
			<if test="grouping != null and grouping != ''">
				AND a.grouping = #{grouping}
			</if>			
			<if test="readerOpenid != null and readerOpenid != ''">
				AND a.openid = #{readerOpenid}
			</if>
		</where>
		ORDER BY a.article_id,a.update_date
	</select>	
    
	<select id="get" resultType="WxReads">
		SELECT 
			<include refid="wxReadsColumns"/>
		FROM wx_reads a
		<include refid="wxReadsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="WxReads">
		SELECT 
			<include refid="wxReadsColumns"/>
		FROM wx_reads a
		<include refid="wxReadsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="article!=null and article.id != null and article.id != ''">
				AND a.article_id = #{article.id}
			</if>
			<if test="broker!=null and broker.id != null and broker.id != ''">
				AND a.broker_id = #{broker.id}
			</if>
			<if test="grouping != null and grouping != ''">
				AND a.grouping = #{grouping}
			</if>			
			<if test="openid != null and openid != ''">
				AND a.openid = #{openid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="WxReads">
		SELECT 
			<include refid="wxReadsColumns"/>
		FROM wx_reads a
		<include refid="wxReadsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO wx_reads(
			id,
			article_id,
			broker_id,
			openid,
			read_count,
			grouping,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{article.id},
			#{broker.id},
			#{openid},
			#{readCount},
			#{grouping},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE wx_reads SET 	
			article_id = #{article.id},
			broker_id = #{broker.id},
			openid = #{openid},
			read_count = #{readCount},
			grouping = #{grouping},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE wx_reads SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>