<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitech.iLife.modules.mod.dao.UserMeasureDao">
    
	<sql id="userMeasureColumns">
		a.id AS "id",
		a.category AS "category.id",
		a.dimension AS "dimension",
		a.property AS "property",
		a.name AS "name",
		a.weight AS "weight",
		a.control_value AS "controlValue",
		a.default_score AS "defaultScore",
		a.default_rank AS "defaultRank",
		a.auto_label_category AS "autoLabelCategory.id",
		cc.name AS "autoLabelCategory.name",		
		a.auto_label_dict AS "autoLabelDict",
		a.auto_label_type AS "autoLabelType",		
		a.type AS "type",
		a.tags AS "tags",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="userMeasureJoins">
		LEFT JOIN sys_user uu ON uu.id = a.update_by
		LEFT JOIN mod_user_category c ON c.id = a.category
		LEFT JOIN mod_user_category cc ON cc.id = a.auto_label_category
	</sql>
    
	<select id="get" resultType="UserMeasure">
		SELECT 
			<include refid="userMeasureColumns"/>
		FROM mod_user_measure a
		<include refid="userMeasureJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserMeasure">
		SELECT 
			<include refid="userMeasureColumns"/>
		FROM mod_user_measure a
		<include refid="userMeasureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="category != null and category.id != null and category.id != ''">
				AND a.category = #{category.id}
			</if>			
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UserMeasure">
		SELECT 
			<include refid="userMeasureColumns"/>
		FROM mod_user_measure a
		<include refid="userMeasureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO mod_user_measure(
			id,
			category,
			dimension,
			property,
			name,
			weight,
			control_value,
			default_score,
			default_rank,
			auto_label_type,
			auto_label_dict,
			auto_label_category,			
			type,
			tags,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{category.id},
			#{dimension},
			#{property},
			#{name},
			#{weight},
			#{controlValue},
			#{defaultScore},
			#{defaultRank},
			#{autoLabelType},
			#{autoLabelDict},
			#{autoLabelCategory.id},			
			#{type},
			#{tags},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE mod_user_measure SET 	
			category = #{category.id},
			dimension = #{dimension},
			property = #{property},
			name = #{name},
			weight = #{weight},
			control_value = #{controlValue},
			default_score = #{defaultScore},
			default_rank = #{defaultRank},
			auto_label_type = #{autoLabelType},
			auto_label_dict = #{autoLabelDict},
			auto_label_category = #{autoLabelCategory.id},			
			type = #{type},
			tags = #{tags},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE mod_user_measure SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
		
	<select id="findByCategoryId" resultType="UserMeasure">
		SELECT 
			<include refid="userMeasureColumns"/>
		FROM mod_measure a
		<include refid="userMeasureJoins"/>
		<where>
			a.del_flag = '0' 
			AND a.category = #{category} 
		</where>		
	</select>	
	
</mapper>