<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitech.iLife.modules.mod.dao.SubscriptionDao">
    
	<!-- 根据out_trade_no更新transaction_id及trade_state -->
	<update id="updateWxTransactionInfoByTradeNo">
		UPDATE subscription SET 	
			trade_state = #{result_code},
			transaction_code = #{transaction_id},
			update_time = now()
		WHERE trade_no = #{out_trade_no}
	</update>	    
    
	<sql id="subscriptionColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_time AS "createTime",
		a.update_by AS "updateBy.id",
		a.update_time AS "updateTime",
		a.sys_org_code AS "sysOrgCode",
		
		a.tenant_id AS "tenant.id",
		tenant.name AS "tenant.name",
		
		a.app_id AS "software.id",
		app.name AS "software.name",
		
		a.plan_id AS "pricePlan.id",
		plan.name AS "pricePlan.name",
		
		a.sale_package_id AS "salePackage.id",
		pkg.name AS "salePackage.name",
		
		a.broker_id AS "broker.id",
		broker.nickname AS "broker.nickname",
		
		a.payer_openid AS "payerOpenid",
		a.subscribe_type AS "subscribeType",
		a.effective_on AS "effectiveOn",
		a.expire_on AS "expireOn",
		a.payment_amount AS "paymentAmount",
		a.payment_time AS "paymentTime",
		a.trade_no AS "tradeNo",
		a.trade_state AS "tradeState",
		a.transaction_code AS "transactionCode",
		a.invoice_id AS "invoiceId"
	</sql>
	
	<sql id="subscriptionJoins">
		left join mod_broker broker on broker.id = a.broker_id
		left join sys_tenant tenant on tenant.id = a.tenant_id
		left join sto_sale_package pkg on pkg.id = a.sale_package_id
		left join sto_price_plan plan on plan.id = a.plan_id
		left join sto_software app on app.id = a.app_id
	</sql>
    
	<select id="get" resultType="Subscription">
		SELECT 
			<include refid="subscriptionColumns"/>
		FROM subscription a
		<include refid="subscriptionJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Subscription">
		SELECT 
			<include refid="subscriptionColumns"/>
		FROM subscription a
		<include refid="subscriptionJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Subscription">
		SELECT 
			<include refid="subscriptionColumns"/>
		FROM subscription a
		<include refid="subscriptionJoins"/>
		<where>
			1 = 1
			<if test="tradeNo != null and tradeNo != ''">
				AND a.trade_no = #{tradeNo}
			</if>
			<if test="tradeState != null and tradeState != ''">
				AND a.trade_state = #{tradeState}
			</if>			
			<if test="transactionCode != null and transactionCode != ''">
				AND a.transaction_code = #{transactionCode}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO subscription(
			id,
			create_by,
			create_time,
			update_by,
			update_time,
			sys_org_code,
			tenant_id,
			broker_id,
			payer_openid,
			app_id,
			plan_id,
			sale_package_id,
			subscribe_type,
			effective_on,
			expire_on,
			payment_amount,
			payment_time,
			trade_no,
			trade_state,
			transaction_code,
			invoice_id
		) VALUES (
			#{id},
			#{createBy.id},
			#{createTime},
			#{updateBy.id},
			#{updateTime},
			#{sysOrgCode},
			#{tenant.id},
			#{broker.id},
			#{payerOpenid},
			#{software.id},
			#{pricePlan.id},
			#{salePackage.id},
			#{subscribeType},
			#{effectiveOn},
			#{expireOn},
			#{paymentAmount},
			#{paymentTime},
			#{tradeNo},
			#{tradeState},
			#{transactionCode},
			#{invoiceId}
		)
	</insert>
	
	<update id="update">
		UPDATE subscription SET 	
			create_time = #{createTime},
			update_by = #{updateBy.id},
			update_time = #{updateTime},
			sys_org_code = #{sysOrgCode},
			tenant_id = #{tenant.id},
			broker_id = #{broker.id},
			payer_openid = #{payerOpenid},
			app_id = #{software.id},
			plan_id = #{pricePlan.id},
			sale_package_id = #{salePackage.id},
			subscribe_type = #{subscribeType},
			effective_on = #{effectiveOn},
			expire_on = #{expireOn},
			payment_amount = #{paymentAmount},
			payment_time = #{paymentTime},
			trade_no = #{tradeNo},
			trade_state = #{tradeState},
			transaction_code = #{transactionCode},
			invoice_id = #{invoiceId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM subscription
		WHERE id = #{id}
	</update>
	
</mapper>