<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitech.iLife.modules.mod.dao.MeasureDao">
    
	<sql id="measureColumns">
		a.id AS "id",
		a.category AS "category.id",
		c.name AS "category.name",
		a.dimension AS "itemDimension.id",
		d.name AS "itemDimension.name",
		a.property AS "property",
		a.name AS "name",
		a.description AS "description",
		a.percentage AS "percentage",
		a.control_value AS "controlValue",
		a.default_value AS "defaultValue",
		a.default_score AS "defaultScore",
		a.default_level AS "defaultLevel",
		a.auto_label_category AS "autoLabelCategory.id",
		cc.name AS "autoLabelCategory.name",
		a.auto_label_tag_category AS "autoLabelTagCategory.id",
		tc.name AS "autoLabelTagCategory.name",
		a.auto_label_dict AS "autoLabelDict",
		a.normalize_type AS "normalizeType",	
		a.multi_value_func AS "multiValueFunc",
		a.auto_label_type AS "autoLabelType",
		a.expression AS "expression",
		a.alpha AS "alpha",
		a.beta AS "beta",
		a.gamma AS "gamma",
		a.delte AS "delte",
		a.epsilon AS "epsilon",
		a.zeta AS "zeta",
		a.eta AS "eta",
		a.theta AS "theta",
		a.lambda AS "lambda",		
		a.type AS "type",
		a.tags AS "tags",
		a.isModifiable AS "isModifiable",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		uu.name AS "updateBy.name",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="measureJoins">
		LEFT JOIN sys_user uu ON uu.id = a.update_by
		LEFT JOIN mod_item_category c ON c.id = a.category
		LEFT JOIN mod_item_category cc ON cc.id = a.auto_label_category
		LEFT JOIN mod_tag_category tc ON tc.id = a.auto_label_tag_category
		LEFT JOIN mod_item_dimension d ON d.id = a.dimension
	</sql>
    
	<select id="get" resultType="Measure">
		SELECT 
			<include refid="measureColumns"/>
		FROM mod_measure a
		<include refid="measureJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Measure">
		SELECT 
			<include refid="measureColumns"/>
		FROM mod_measure a
		<include refid="measureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="category != null and category.id != null and category.id != ''">
				AND a.category = #{category.id}
			</if>
			<if test="name != null and name != ''">
				AND (a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					OR a.property LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					OR a.dimension LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					)
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Measure">
		SELECT 
			<include refid="measureColumns"/>
		FROM mod_measure a
		<include refid="measureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
		
	<select id="findByCategoryId" resultType="Measure">
		SELECT 
			<include refid="measureColumns"/>
		FROM mod_measure a
		<include refid="measureJoins"/>
		<where>
			a.del_flag = '0' 
			AND a.category = #{category} 
		</where>		
	</select>
	
	<insert id="insert">
		INSERT INTO mod_measure(
			id,
			category,
			dimension,
			property,
			name,
			description,
			percentage,
			control_value,
			default_value,
			default_score,
			default_level,
			auto_label_type,
			auto_label_dict,
			auto_label_category,
			auto_label_tag_category,
			normalize_type,
			multi_value_func,
			expression,
			alpha,
			beta,
			gamma,
			delte,
			epsilon,
			zeta,
			eta,
			theta,
			lambda,			
			type,
			tags,
			isModifiable,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{category.id},
			#{itemDimension.id},
			#{property},
			#{name},
			#{description},
			#{percentage},
			#{controlValue},
			#{defaultValue},
			#{defaultScore},
			#{defaultLevel},
			#{autoLabelType},
			#{autoLabelDict},
			#{autoLabelCategory.id},
			#{autoLabelTagCategory.id},
			#{normalizeType},
			#{multiValueFunc},
			#{expression},
			#{alpha},
			#{beta},
			#{gamma},
			#{delte},
			#{epsilon},
			#{zeta},
			#{eta},
			#{theta},
			#{lambda},			
			#{type},
			#{tags},
			#{isModifiable},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE mod_measure SET 	
			category = #{category.id},
			dimension = #{itemDimension.id},
			property = #{property},
			name = #{name},
			description = #{description},
			percentage = #{percentage},
			control_value = #{controlValue},
			default_value = #{defaultValue},
			default_score = #{defaultScore},
			default_level = #{defaultLevel},
			auto_label_type = #{autoLabelType},
			auto_label_dict = #{autoLabelDict},
			auto_label_category = #{autoLabelCategory.id},	
			auto_label_tag_category = #{autoLabelTagCategory.id},		
			normalize_type = #{normalizeType},
			multi_value_func = #{multiValueFunc},	
			expression = #{expression},
			alpha = #{alpha},
			beta = #{beta},
			gamma = #{gamma},
			delte = #{delte},
			epsilon = #{epsilon},
			zeta = #{zeta},
			eta = #{eta},
			theta = #{theta},
			lambda = #{lambda},			
			type = #{type},
			tags = #{tags},
			isModifiable = #{isModifiable},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE mod_measure SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>